@using Data_Trans_Job.Models
@{
    Layout = "_Layout";
}
@model List<AppUser>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<h1>User List</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Image</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Roles</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>

                @if (@user.UrlImage != null)
                {
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="rounded-circle overflow-hidden" style="width: 50px; height: 50px;">
                                <img src="/User_Images/@user.UrlImage" alt="Image" class="img-fluid" />
                            </div>
                        </div>
                    </td>
                }
                else
                {
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="rounded-circle overflow-hidden" style="width: 50px; height: 50px;">
                                <img src="/User_Images/noimage.png" alt="Image" class="img-fluid" />
                            </div>
                        </div>
                    </td>
                }
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Email</td>
                <td>
                    <ul>
                        @foreach (var role in user.Roles)
                        {
                            <li>@role.Name</li>
                        }
                    </ul>
                </td>
                <td>
                    <div class="d-flex">
@*                         <a href="@Url.Action("Edit", new { userId = user.Id })" class="btn btn-primary" style="margin-right: 8px;">  <i class="bi bi-pencil" style="font-size: 12px;"></i>   </a>
 *@
                        <a asp-action="Edit" title="Edit" asp-route-userId="@user.Id" style="margin-right: 8px;">
                            | <i class="bi bi-pencil" style="font-size: 16px;"></i>
                        </a>
                        |
                        <a asp-action="Details" asp-route-userId="@user.Id" title="Details" style="margin-right: 8px;">
                            <i class="bi bi-info-circle" style="font-size: 16px;padding: 2px 4px;"></i>
                        </a>
                        |
                        <form asp-action="Delete" title="Delete" asp-route-userId="@user.Id" class="delete-form">
                        <input type="hidden" name="__RequestVerificationToken"
                               value="@Html.AntiForgeryToken()" />
                        <button type="button" class="delete-button btn btn-danger" style="padding: 2px 4px; font-size: 10px;">
                               
                                <i class="bi bi-x-circle" style="font-size: 12px;"></i>
                        </button>
                    </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add SweetAlert2 JavaScript file -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Attach event listener to delete buttons
    document.querySelectorAll('.delete-button').forEach(button => {
        button.addEventListener('click', (event) => {
            event.preventDefault();

            const form = event.target.closest('.delete-form');

            // Display SweetAlert2 confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: "Every Product that belongs to category will be deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send AJAX request to delete action
                    fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': form.querySelector('[name="__RequestVerificationToken"]').value
                        }
                    }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Show a success message using SweetAlert2
                                const successSwal = Swal.fire({
                                    title: 'Deleted!',
                                    text: 'The user has been deleted successfully.',
                                    icon: 'success',
                                    showConfirmButton: false // No "OK" button
                                });

                                // Hide the success message after a delay
                                setTimeout(() => {
                                    successSwal.close();
                                }, 1500); // 3 seconds

                                // Refresh the page after a delay
                                setTimeout(() => {
                                    location.reload();
                                }, 500); // 3.5 seconds
                            } else {
                                // Handle error case
                                Swal.fire(
                                    'Error',
                                    'An error occurred while deleting the user.',
                                    'error'
                                );
                            }
                        });
                }
            });
        });
    });
</script>